/*Напишите программу «Регистратура».
На вход программе приходят строки с фамилиями или строка Next. Пришедшие люди
становятся в очередь, а по запросу Next необходимо вызвать в регистратуру
человека с фамилией, идущей первой в лексикографическом порядке (по алфавиту), и
вывести его фамилию на экран. Фамилии пациентов могут повторяться. Каждый запрос
(на добавление и вывод) должен работать за O(logn).*/

#include <iostream>
#include <map>
#include <string>

int main() {
  // Ключ - имя, значение - количество пациентов в очереди с такой фамилией
  std::map<std::string, int> queue;

  std::string input;

  while (true) {
    std::cout << "Enter name or \"next\" or \"exit\" > ";
    std::cin >> input;

    if (input == "exit") {
      break;
    }

    if (input == "next") {
      if (!queue.empty()) {
        // Вывод ключа первой пары словаря
        std::cout << queue.begin()->first << std::endl;

        // Декремент значения первой пары и проверка на 0
        // Если 0 (пациентов с такой фамилией больше нет), пара удаляется
        if (--(queue.begin()->second) == 0) {
          queue.erase(queue.begin());
        }
      } else {
        std::cout << "There are no more patients" << std::endl;
      }
    } else {
      // Количество пациентов с такой фамилией увеличивается на 1
      // Код работает и в случае, если пациентов с такой фамилией нет
      // В этом случае создается новый элемент словаря со значением по умолчанию
      // 0. Нужно уточнить, правильно ли такое решение? Может ли случится, что в
      // новой паре значение не будет равно 0?
      // Или лучше явно проверять наличие ключа?
      queue[input]++;
    }
  }
}
